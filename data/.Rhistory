discard <- which(is.na(merged$WES_ID))
discard
merged <- merged[-discard,]
merged
dim(merged)
# subset P260 by medial and lateral
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(10))),]$Patient <- 'P260-l'
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(from=11,to=20,by=1))),]$Patient <- 'P260-m'
# specify purity metric to use
merged$purity <- merged$FACETS
merged[which(merged$PurityEstUsed == 'IDH'),]$purity <- 2*merged[which(merged$PurityEstUsed == 'IDH'),]$IDH1_VAF
# convert NAs to 0 (so that are counted; if NA means FACETs could not calculate because were so low)
merged[which(is.na(merged$purity)),]$purity <- 0
patientOrder <- c('P340','P41','P49','P259','P302','P450','P303','P327','P375','P326','P453','P456','P300','P260-l','P260-m','P372','P373','P413','P454','P455','P457','P452')
patientOrder <- c('P340','P41','P49','P259','P302','P450','P303','P327','P375','P326','P453','P456','P300','P260','P372','P373','P413','P454','P455','P457','P452')
patientOrderSplit <- c('P340','P41','P49','P259','P302','P450','P303','P327','P375','P326','P453','P456','P300','P260-l','P260-m','P372','P373','P413','P454','P455','P457','P452')
# set patient level order (Oligo, Astro, GBM, with Primaries always before Recurrences)
merged$Patient <- factor(merged$Patient, levels=patientOrderSplit)
list=('IDH-mut_A'=1)
list
list=(IDH-mut_A=1)
list=list('IDH-mut_A'=1)
lit
list
# set colors (+ molsubtype) for plotting (here focused on subtype differences)
merged$molType <- 'IDH-mut_A' # Astro
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$X1p19q==1),]$molType <- '#IDH-mut_O' #blue Set1
subtypeColors <- list=list('IDH-mut_A'='#4DAF4A', 'IDH-mut_O'='#377EB8', 'IDH-wt'='#E41A1C')
subtypeColors <- list=list('IDH-mut_A'='#4DAF4A', 'IDH-mut_O'='#377EB8', 'IDH-wt'='#E41A1C')
subtypeColors <- list('IDH-mut_A'='#4DAF4A', 'IDH-mut_O'='#377EB8', 'IDH-wt'='#E41A1C')
merged$color <- NA
lapply(subtypeColors, function(x) as.character(merged$color[match(x, merged$molType)]))
subtypeColors
merged
# set colors (+ molsubtype) for plotting (here focused on subtype differences)
merged$molType <- 'IDH-mut_A' # Astro
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$X1p19q==1),]$molType <- 'IDH-mut_O' #blue Set1
merged$color <- NA
lapply(subtypeColors, function(x) as.character(merged$color[match(x, merged$molType)]))
lapply(subtypeColors, function(x) as.character(merged$color[match(merged$molType,x )]))
lapply(subtypeColors)
subtypeColors
lapply(subtypeColors, function(x) as.character(merged$color[match(merged$molType,name(x) )]))
lapply(subtypeColors, function(x) as.character(merged$color[match(merged$molType,names(x) )]))
lapply(subtypeColors, function(x) as.character(merged$color[match(names(x),merged$molType)]))
names(subtypeColors)
match(subtypeColors,merged$molType)
merged$molType <- 'IDH-mut_A' # Astro
merged$color <- subtypeColors['IDH-mut_A'] # green from bp Set1
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$IDH_Mut==0),]$color <- subtypeColors['IDH-wt'] #red Set1
merged[which(merged$X1p19q==1),]$molType <- '#IDH-mut_O' #blue Set1
merged[which(merged$X1p19q==1),]$color <- subtypeColors['IDH-mut_O'] #blue Set1
color <- unique(merged[,c('Patient','color')])$color
names(color) <- unique(merged[,c('Patient','color')])$Patient
color <- color[patientOrderSplit]
molType <- unique(merged[,c('Patient','molType')])$molType
names(molType) <- unique(merged[,c('Patient','molType')])$Patient
molType <- molType[patientOrderSplit]
# plot boxplot
boxplot(merged$purity~merged$Patient, col = color, ylab = 'Estimated Purity', las='2')
color
merged
merged$molType <- 'IDH-mut_A' # Astro
merged$color <- subtypeColors['IDH-mut_A'] # green from bp Set1
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$IDH_Mut==0),]$color <- subtypeColors['IDH-wt'] #red Set1
merged[which(merged$X1p19q==1),]$molType <- 'IDH-mut_O' #blue Set1
merged[which(merged$X1p19q==1),]$color <- subtypeColors['IDH-mut_O'] #blue Set1
color <- unique(merged[,c('Patient','color')])$color
names(color) <- unique(merged[,c('Patient','color')])$Patient
color <- color[patientOrderSplit]
molType <- unique(merged[,c('Patient','molType')])$molType
names(molType) <- unique(merged[,c('Patient','molType')])$Patient
molType <- molType[patientOrderSplit]
color
subtypedata
color
color <- unique(merged[,c('Patient','color')])$color
color
unique(merged[,c('Patient','color')])$Patient
length(color)
source('/Users/shilz/Documents/Professional/Positions/UCSF_Costello/Publications/Hilz2018_IDHSpatioTemporal/Scripts/3DGliomaAnalysis/scripts/studyConfig.R')
# read in sample data file
data <- read.table(sampleDataFile, sep='\t', header = T, stringsAsFactors = F)
# read in patient + tumor data file
subtypedata <- read.table(patientTumorDataFile, sep='\t', header = T)
# merge by patient ID
merged <- merge(data, subtypedata, by="Patient")
# remove samples that are lacking purity info at all (did not have exome done)
discard <- which(is.na(merged$WES_ID))
merged <- merged[-discard,]
# subset P260 by medial and lateral
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(10))),]$Patient <- 'P260-l'
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(from=11,to=20,by=1))),]$Patient <- 'P260-m'
# specify purity metric to use
merged$purity <- merged$FACETS
merged[which(merged$PurityEstUsed == 'IDH'),]$purity <- 2*merged[which(merged$PurityEstUsed == 'IDH'),]$IDH1_VAF
# convert NAs to 0 (so that are counted; if NA means FACETs could not calculate because were so low)
merged[which(is.na(merged$purity)),]$purity <- 0
# set patient level order (Oligo, Astro, GBM, with Primaries always before Recurrences)
merged$Patient <- factor(merged$Patient, levels=patientOrderSplit)
# set colors (+ molsubtype) for plotting (here focused on subtype differences)
merged$molType <- 'IDH-mut_A' # Astro
merged$color <- subtypeColors['IDH-mut_A'] # green from bp Set1
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$IDH_Mut==0),]$color <- subtypeColors['IDH-wt'] #red Set1
merged[which(merged$X1p19q==1),]$molType <- 'IDH-mut_O' #blue Set1
merged[which(merged$X1p19q==1),]$color <- subtypeColors['IDH-mut_O'] #blue Set1
color <- unique(merged[,c('Patient','color')])$color
length(color)
unique(merged$Patient)
unique(merged[,c('Patient','color')])$color
unique(merged[,c('Patient','color')])
dim(unique(merged[,c('Patient','color')]))
names(color) <- unique(merged[,c('Patient','color')])$Patient
color
color <- color[patientOrderSplit]
color
patientOrderSplit
names(color) %in% patientOrderSplit
subtypedata
source('/Users/shilz/Documents/Professional/Positions/UCSF_Costello/Publications/Hilz2018_IDHSpatioTemporal/Scripts/3DGliomaAnalysis/scripts/studyConfig.R')
# read in sample data file
data <- read.table(sampleDataFile, sep='\t', header = T, stringsAsFactors = F)
# read in patient + tumor data file
subtypedata <- read.table(patientTumorDataFile, sep='\t', header = T)
# merge by patient ID
merged <- merge(data, subtypedata, by="Patient")
# remove samples that are lacking purity info at all (did not have exome done)
discard <- which(is.na(merged$WES_ID))
merged <- merged[-discard,]
# subset P260 by medial and lateral
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(10))),]$Patient <- 'P260-l'
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(from=11,to=20,by=1))),]$Patient <- 'P260-m'
# specify purity metric to use
merged$purity <- merged$FACETS
merged[which(merged$PurityEstUsed == 'IDH'),]$purity <- 2*merged[which(merged$PurityEstUsed == 'IDH'),]$IDH1_VAF
# convert NAs to 0 (so that are counted; if NA means FACETs could not calculate because were so low)
merged[which(is.na(merged$purity)),]$purity <- 0
# set patient level order (Oligo, Astro, GBM, with Primaries always before Recurrences)
merged$Patient <- factor(merged$Patient, levels=patientOrderSplit)
# set colors (+ molsubtype) for plotting (here focused on subtype differences)
merged$molType <- 'IDH-mut_A' # Astro
merged$color <- subtypeColors['IDH-mut_A'] # green from bp Set1
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$IDH_Mut==0),]$color <- subtypeColors['IDH-wt'] #red Set1
merged[which(merged$X1p19q==1),]$molType <- 'IDH-mut_O' #blue Set1
merged[which(merged$X1p19q==1),]$color <- subtypeColors['IDH-mut_O'] #blue Set1
color <- unique(merged[,c('Patient','color')])$color
names(color) <- unique(merged[,c('Patient','color')])$Patient
color <- color[patientOrderSplit]
molType <- unique(merged[,c('Patient','molType')])$molType
names(molType) <- unique(merged[,c('Patient','molType')])$Patient
molType <- molType[patientOrderSplit]
color
subtypedata
source('~/Documents/Professional/Positions/UCSF_Costello/Publications/Hilz2018_IDHSpatioTemporal/Scripts/3DGliomaAnalysis/tumor_purity_analysis.R', echo=TRUE)
# read in config file info
source('/Users/shilz/Documents/Professional/Positions/UCSF_Costello/Publications/Hilz2018_IDHSpatioTemporal/Scripts/3DGliomaAnalysis/scripts/studyConfig.R')
# read in sample data file
data <- read.table(sampleDataFile, sep='\t', header = T, stringsAsFactors = F)
# read in patient + tumor data file
subtypedata <- read.table(patientTumorDataFile, sep='\t', header = T)
# merge by patient ID
merged <- merge(data, subtypedata, by="Patient")
# remove samples that are lacking purity info at all (did not have exome done)
discard <- which(is.na(merged$WES_ID))
merged <- merged[-discard,]
# subset P260 by medial and lateral
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(10))),]$Patient <- 'P260-l'
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(from=11,to=20,by=1))),]$Patient <- 'P260-m'
# specify purity metric to use
merged$purity <- merged$FACETS
merged[which(merged$PurityEstUsed == 'IDH'),]$purity <- 2*merged[which(merged$PurityEstUsed == 'IDH'),]$IDH1_VAF
# convert NAs to 0 (so that are counted; if NA means FACETs could not calculate because were so low)
merged[which(is.na(merged$purity)),]$purity <- 0
# set patient level order (Oligo, Astro, GBM, with Primaries always before Recurrences)
merged$Patient <- factor(merged$Patient, levels=patientOrderSplit)
# set colors (+ molsubtype) for plotting (here focused on subtype differences)
merged$molType <- 'IDH-mut_A' # Astro
merged
source('/Users/shilz/Documents/Professional/Positions/UCSF_Costello/Publications/Hilz2018_IDHSpatioTemporal/Scripts/3DGliomaAnalysis/scripts/studyConfig.R')
# read in sample data file
data <- read.table(sampleDataFile, sep='\t', header = T, stringsAsFactors = F)
# read in patient + tumor data file
subtypedata <- read.table(patientTumorDataFile, sep='\t', header = T)
# merge by patient ID
merged <- merge(data, subtypedata, by="Patient")
# remove samples that are lacking purity info at all (did not have exome done)
discard <- which(is.na(merged$WES_ID))
merged <- merged[-discard,]
# subset P260 by medial and lateral
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(10))),]$Patient <- 'P260-l'
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(from=11,to=20,by=1))),]$Patient <- 'P260-m'
# specify purity metric to use
merged$purity <- merged$FACETS
merged[which(merged$PurityEstUsed == 'IDH'),]$purity <- 2*merged[which(merged$PurityEstUsed == 'IDH'),]$IDH1_VAF
# convert NAs to 0 (so that are counted; if NA means FACETs could not calculate because were so low)
merged[which(is.na(merged$purity)),]$purity <- 0
# set patient level order (Oligo, Astro, GBM, with Primaries always before Recurrences)
merged$Patient <- factor(merged$Patient, levels=patientOrderSplit)
# set colors (+ molsubtype) for plotting (here focused on subtype differences)
merged$molType <- 'IDH-mut_A' # Astro
merged$color <- subtypeColors['IDH-mut_A'] # green from bp Set1
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$IDH_Mut==0),]$color <- subtypeColors['IDH-wt'] #red Set1
merged[which(merged$X1p19q==1),]$molType <- 'IDH-mut_O' #blue Set1
merged[which(merged$X1p19q==1),]$color <- subtypeColors['IDH-mut_O'] #blue Set1
color <- unique(merged[,c('Patient','color')])$color
names(color) <- unique(merged[,c('Patient','color')])$Patient
color <- color[patientOrderSplit]
molType <- unique(merged[,c('Patient','molType')])$molType
names(molType) <- unique(merged[,c('Patient','molType')])$Patient
molType <- molType[patientOrderSplit]
# plot boxplot
boxplot(merged$purity~merged$Patient, col = color, ylab = 'Estimated Purity', las='2')
# read in config file info
source('/Users/shilz/Documents/Professional/Positions/UCSF_Costello/Publications/Hilz2018_IDHSpatioTemporal/Scripts/3DGliomaAnalysis/scripts/studyConfig.R')
# read in sample data file
data <- read.table(sampleDataFile, sep='\t', header = T, stringsAsFactors = F)
# read in patient + tumor data file
subtypedata <- read.table(patientTumorDataFile, sep='\t', header = T)
# merge by patient ID
merged <- merge(data, subtypedata, by="Patient")
unique(merged$Patient)
discard <- which(is.na(merged$WES_ID))
merged <- merged[-discard,]
# subset P260 by medial and lateral
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(10))),]$Patient <- 'P260-l'
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(from=11,to=20,by=1))),]$Patient <- 'P260-m'
# specify purity metric to use
merged$purity <- merged$FACETS
merged[which(merged$PurityEstUsed == 'IDH'),]$purity <- 2*merged[which(merged$PurityEstUsed == 'IDH'),]$IDH1_VAF
# convert NAs to 0 (so that are counted; if NA means FACETs could not calculate because were so low)
merged[which(is.na(merged$purity)),]$purity <- 0
# set patient level order (Oligo, Astro, GBM, with Primaries always before Recurrences)
merged$Patient <- factor(merged$Patient, levels=patientOrderSplit)
# set colors (+ molsubtype) for plotting (here focused on subtype differences)
merged$molType <- 'IDH-mut_A' # Astro
merged$color <- subtypeColors['IDH-mut_A'] # green from bp Set1
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$IDH_Mut==0),]$color <- subtypeColors['IDH-wt'] #red Set1
merged[which(merged$X1p19q==1),]$molType <- 'IDH-mut_O' #blue Set1
merged[which(merged$X1p19q==1),]$color <- subtypeColors['IDH-mut_O'] #blue Set1
color <- unique(merged[,c('Patient','color')])$color
names(color) <- unique(merged[,c('Patient','color')])$Patient
color <- color[patientOrderSplit]
molType <- unique(merged[,c('Patient','molType')])$molType
names(molType) <- unique(merged[,c('Patient','molType')])$Patient
molType <- molType[patientOrderSplit]
color
# plot boxplot
boxplot(merged$purity~merged$Patient, col = color, ylab = 'Estimated Purity', las='2')
warnings()
color
color <- color[patientOrderSplit] %>% unlist
# plot boxplot
boxplot(merged$purity~merged$Patient, col = color, ylab = 'Estimated Purity', las='2')
dev.off()
# plot boxplot
boxplot(merged$purity~merged$Patient, col = color, ylab = 'Estimated Purity', las='2')
60+60+40+20+30
file <- '/Users/shilz/Documents/Professional/Positions/UCSF_Costello/Projects/2018_Patient260_Case_Study/Data/Pathology_CollectionSpreadsheet.txt'
data <- read.table(file, sep='\t', header = T, stringsAsFactors = F)
data <- read.table(file, sep='\t', header = T, stringsAsFactors = F)
head(data)
data <- read.table(file, sep='\t', header = T, stringsAsFactors = F)
head(data)
data <- read.table(file, sep='\t', header = T, stringsAsFactors = F)
head(data)
library(ggplot2)
ggplot(data, aes(x=aspect, y=ps6)) +
geom_boxplot()+
geom_dotplot(binaxis='y', stackdir='center')
ggplot(data, aes(x=aspect, y=ps6)) +
geom_boxplot()+
geom_dotplot(binaxis='y', stackdir='center')+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black')) +
()
ggplot(data, aes(x=aspect, y=ps6)) +
geom_boxplot()+
geom_dotplot(binaxis='y', stackdir='center')+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'))
ggplot(data, aes(x=aspect, y=ps6)) +
geom_boxplot()+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'))
ggplot(data, aes(x=aspect, y=ps6)) +
geom_boxplot()+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'))
ggplot(data, aes(x=aspect, y=ps6)) +
geom_boxplot()+
geom_dotplot(binaxis='y', stackdir='center')+
scale_colour_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'))
ggplot(data, aes(x=aspect, y=ps6, fill=dose)) +
geom_boxplot()+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'))
ggplot(data, aes(x=aspect, y=ps6, fill=aspect)) +
geom_boxplot()+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'))
ggplot(data, aes(x=aspect, y=ps6, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'))
ggplot(data, aes(x=aspect, y=ps6, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'))+
theme_set(theme_bw() + theme(legend.key=element_blank()))
ggplot(data, aes(x=aspect, y=ps6, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'), legend.background=element_blank())
theme(axis.text.x = element_text(size=20), axis.title = element_text(size = 20), axis.text.y = element_text(size=20), panel.background = element_rect(fill = 'white', colour = 'black'), legend.background="white"
ggplot(data, aes(x=aspect, y=ps6, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=10), axis.title = element_text(size = 10), axis.text.y = element_text(size=10), panel.background = element_rect(fill = 'white', colour = 'black'), legend.background="element_blank()")
ggplot(data, aes(x=aspect, y=ps6, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=10), axis.title = element_text(size = 10), axis.text.y = element_text(size=10), panel.background = element_rect(fill = 'white', colour = 'black'), legend.background=element_blank())
ggplot(data, aes(x=aspect, y=ps6, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=12), axis.title = element_text(size = 12), axis.text.y = element_text(size=12), panel.background = element_rect(fill = 'white', colour = 'black'), legend.background=element_blank())
data <- read.table(file, sep='\t', header = T, stringsAsFactors = F)
ggplot(data, aes(x=aspect, y=ps6, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=12), axis.title = element_text(size = 12), axis.text.y = element_text(size=12), panel.background = element_rect(fill = 'white', colour = 'black'), legend.background=element_blank())
ggplot(data, aes(x=aspect, y=ps-6, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=12), axis.title = element_text(size = 12), axis.text.y = element_text(size=12), panel.background = element_rect(fill = 'white', colour = 'black'), legend.background=element_blank())
head(data)
data <- read.table(file, sep='\t', header = T, stringsAsFactors = F)
ggplot(data, aes(x=aspect, y=ps6, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=12), axis.title = element_text(size = 12), axis.text.y = element_text(size=12), panel.background = element_rect(fill = 'white', colour = 'black'), legend.background=element_blank())
ggplot(data, aes(x=aspect, y=CD163, fill=aspect)) +
geom_boxplot(fill="white")+
geom_dotplot(binaxis='y', stackdir='center')+
scale_fill_manual(values=c("blue", "red"))+
theme(axis.text.x = element_text(size=12), axis.title = element_text(size = 12), axis.text.y = element_text(size=12), panel.background = element_rect(fill = 'white', colour = 'black'), legend.background=element_blank())
length(variants)
# plot boxplot
boxplot(merged$purity~merged$Patient, col = color, ylab = 'Estimated CCF', las='2')
grade <- unique(merged[,c('Patient','Grade')])$Grade
names(grade) <- unique(merged[,c('Patient','Grade')])$Patient
grade <- grade[patientOrderSplit]
means <- aggregate(merged[,'purity'], list(merged$Patient), mean)
means$molType <- molType
means$grade <- grade
means$grade <- as.factor(means$grade)
medians <- aggregate(merged[,'purity'], list(merged$Patient), median)
medians$molType <- molType
medians$grade <- grade
medians$grade <- as.factor(medians$grade)
variance <- aggregate(merged[,'purity'], list(merged$Patient), var)
variance$molType <- molType
variance$grade <- grade
variance$grade <- as.factor(variance$grade)
# plot means by molType (i.e. subtype)
boxplot(means$x~means$molType, ylab = 'Estimated Mean Purity', las='2', col='grey')
TukeyHSD(aov(means$x~means$molType))
medians
# plot medians by molType (i.e. subtype)
boxplot(medians$x~medians$molType, ylab = 'Estimated Median Purity', las='2', col='grey')
TukeyHSD(aov(medians$x~medians$molType))
merged$molType <- 'IDH-mut_A' # Astro
merged$color <- subtypeColors['IDH-mut_A'] # green from bp Set1
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$IDH_Mut==0),]$color <- subtypeColors['IDH-wt'] #red Set1
merged[which(merged$X1p19q==1),]$molType <- 'IDH-mut_O' #blue Set1
merged[which(merged$X1p19q==1),]$color <- subtypeColors['IDH-mut_O'] #blue Set1
color <- unique(merged[,c('Patient','color')])$color
names(color) <- unique(merged[,c('Patient','color')])$Patient
color <- color[patientOrderSplit] %>% unlist
molType <- unique(merged[,c('Patient','molType')])$molType
names(molType) <- unique(merged[,c('Patient','molType')])$Patient
molType <- molType[patientOrderSplit]
molType
means
# get mean,med, and var by patient
summary <- aggregate(merged[,'purity'], list(merged$Patient), mean)
summary$molType <- molType
summary$grade <- grade
summary$grade <- as.factor(means$grade)
summary$medians <- aggregate(merged[,'purity'], list(merged$Patient), median)
summary$variance <- aggregate(merged[,'purity'], list(merged$Patient), var)
summary$molType <- factor(molType, levels=c("IDH-mut_O","IDH-mut_A","IDH-wt")
# get mean,med, and var by patient
summary <- aggregate(merged[,'purity'], list(merged$Patient), mean)
summary$molType <- molType
summary$molType <- factor(molType, levels=c("IDH-mut_O","IDH-mut_A","IDH-wt")
summary$grade <- as.factor(means$grade)
summary$medians <- aggregate(merged[,'purity'], list(merged$Patient), median)
# get mean,med, and var by patient
summary <- aggregate(merged[,'purity'], list(merged$Patient), mean)
summary$molType <- molType
summary$molType <- factor(molType, levels=c("IDH-mut_O","IDH-mut_A","IDH-wt"))
summary$grade <- grade
summary$grade <- as.factor(means$grade)
summary$medians <- aggregate(merged[,'purity'], list(merged$Patient), median)
summary$variance <- aggregate(merged[,'purity'], list(merged$Patient), var)
# plot medians by molType (i.e. subtype)
boxplot(medians$x~medians$molType, ylab = 'Estimated Median Purity', las='2', col='grey')
summary
# get mean,med, and var by patient
summary <- aggregate(merged[,'purity'], list(merged$Patient), mean)
summary
colnames(summary) <- c("patientID","means")
summary$molType <- molType
summary$molType <- factor(molType, levels=c("IDH-mut_O","IDH-mut_A","IDH-wt"))
summary$grade <- grade
summary$grade <- as.factor(means$grade)
summary
aggregate(merged[,'purity'], list(merged$Patient), median)
summary$medians <- aggregate(merged[,'purity'], median)
summary$medians <- aggregate(merged[,'purity'], list(merged$Patient), median)$x
summary
summary <- aggregate(merged[,'purity'], list(merged$Patient), mean)
colnames(summary) <- c("patientID","means")
summary$molType <- molType
summary$molType <- factor(molType, levels=c("IDH-mut_O","IDH-mut_A","IDH-wt"))
summary$grade <- grade
summary$grade <- as.factor(means$grade)
summary$medians <- aggregate(merged[,'purity'], list(merged$Patient), median)$x
summary$variance <- aggregate(merged[,'purity'], list(merged$Patient), var)$x
# plot medians by molType (i.e. subtype)
boxplot(summary$medians~summary$molType, ylab = 'Estimated Median Purity', las='2', col='grey')
TukeyHSD(aov(summary$medians~summary$molType))
# plot variance by molType (i.e. subtype)
boxplot(summary$variance~summary$molType, ylab = 'Variance in Purity', las='2', col='grey')
TukeyHSD(aov(summary$variance~summary$molType))
View(merged)
# look at variance for medians by subtype
aggregate(summary[,'medians'], list(summary$molType), var)
# read in config file info
source('/Users/shilz/Documents/Professional/Positions/UCSF_Costello/Publications/Hilz2018_IDHSpatioTemporal/Scripts/3DGliomaAnalysis/scripts/studyConfig.R')
# read in sample data file
data <- read.table(sampleDataFile, sep='\t', header = T, stringsAsFactors = F)
# read in patient + tumor data file
subtypedata <- read.table(patientTumorDataFile, sep='\t', header = T)
# merge by patient ID
merged <- merge(data, subtypedata, by="Patient")
# remove samples that are lacking purity info at all (did not have exome done)
discard <- which(is.na(merged$WES_ID))
merged <- merged[-discard,]
# subset P260 by medial and lateral
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(10))),]$Patient <- 'P260-l'
merged[which(merged$Patient=='P260' & merged$SampleName %in% paste0('v',seq(from=11,to=20,by=1))),]$Patient <- 'P260-m'
# specify purity metric to use
merged$purity <- merged$FACETS
merged[which(merged$PurityEstUsed == 'IDH'),]$purity <- 2*merged[which(merged$PurityEstUsed == 'IDH'),]$IDH1_VAF
# convert NAs to 0 (so that are counted; if NA means FACETs could not calculate because were so low)
merged[which(is.na(merged$purity)),]$purity <- 0
# set patient level order (Oligo, Astro, GBM, with Primaries always before Recurrences)
merged$Patient <- factor(merged$Patient, levels=patientOrderSplit)
# set colors (+ molsubtype) for plotting (here focused on subtype differences)
merged$molType <- 'IDH-mut_A' # Astro
merged$color <- subtypeColors['IDH-mut_A'] # green from bp Set1
merged[which(merged$IDH_Mut==0),]$molType <- 'IDH-wt' #red Set1
merged[which(merged$IDH_Mut==0),]$color <- subtypeColors['IDH-wt'] #red Set1
merged[which(merged$X1p19q==1),]$molType <- 'IDH-mut_O' #blue Set1
merged[which(merged$X1p19q==1),]$color <- subtypeColors['IDH-mut_O'] #blue Set1
color <- unique(merged[,c('Patient','color')])$color
names(color) <- unique(merged[,c('Patient','color')])$Patient
color <- color[patientOrderSplit] %>% unlist
molType <- unique(merged[,c('Patient','molType')])$molType
names(molType) <- unique(merged[,c('Patient','molType')])$Patient
molType <- molType[patientOrderSplit]
# plot boxplot
boxplot(merged$purity~merged$Patient, col = color, ylab = 'Estimated CCF', las='2')
# get out grade by patient
grade <- unique(merged[,c('Patient','Grade')])$Grade
names(grade) <- unique(merged[,c('Patient','Grade')])$Patient
grade <- grade[patientOrderSplit]
# get mean,med, and var by patient
summary <- aggregate(merged[,'purity'], list(merged$Patient), mean)
colnames(summary) <- c("patientID","means")
summary$molType <- molType
summary$molType <- factor(molType, levels=c("IDH-mut_O","IDH-mut_A","IDH-wt"))
summary$grade <- grade
summary$grade <- as.factor(means$grade)
summary$medians <- aggregate(merged[,'purity'], list(merged$Patient), median)$x
summary$variance <- aggregate(merged[,'purity'], list(merged$Patient), var)$x
# plot medians by molType (i.e. subtype)
boxplot(summary$medians~summary$molType, ylab = 'Estimated Median Purity', las='2', col='grey')
TukeyHSD(aov(summary$medians~summary$molType))
